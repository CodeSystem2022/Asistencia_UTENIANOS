[8:49 a. m., 28/11/2022] CAROLINA BELÉN DELGADO: // Degado Carolina Ejercicio 7
 //Clase 10
//  Operaciones  java
package operaciones;

public class Operaciones {        
    public static int sumar(int a, int b){
        System.out.println("Método para sumar enteros ");
        return a + b;
    }
    
    public static double sumar (double a, double b) {
        System.out.println("Método para sumar double");
        return a + b;
    }
}
[8:51 a. m., 28/11/2022] CAROLINA BELÉN DELGADO: /*continuacion  operaciones. java con testOperaciones. java
 * @Carolina Delgado
 */
package test;
import operaciones.Operaciones;
public class TestOperaciones {
    public static void main(String[] args){
       var resultado = Operaciones.sumar(7, 9) ;
       System.out.println("resultado = " + resultado) ;
               
       var resultado2 = Operaciones.sumar(5.0, 7) ;     
       System.out.println("resultado2 = " + resultado2) ;
               
       var resultado3= Operaciones.sumar(8, 6L) ; 
       System.out.println("resultado3 = " + resultado3);
       

}
***************************************************************************
//LECCION 10 Ejecici1 (MATRIZ TRANSPUESTA
// FACUNDO GIANGRAVE
//
package test;
import java.util.Scanner;
public class ej1matrizTranspuesta {
    public static void main(String[] args) {
        Scanner entrada = new Scanner(System.in);
        int matriz[] [] =new int[3][3];
        
        System.out.println("LLEAMOS LA MATRIZ");
        for (int i=0; i<3; i++) {
            for (int j=0; j<3; j++) {
                System.out.println("Matriz ["+i+"]["+j+"]");
                matriz[i][j] = entrada.nextInt();
            }
        }
        System.out.println();
        
        
        System.out.println("MATRIZ ORIGINAL");
        for (int i=0;i<3;i++) {
            for (int j=0;j<3;j++) {
                System.out.println(matriz[i][j]+ " "); 
            }
            System.out.println();
        }
        System.out.println();
        
        
        //MATRIZ TRANSPUESTA
        System.out.println("MATRIZ TRANSPUESTA: ");
         for (int i=0;i<3;i++) {
            for (int j=0;j<3;j++) {
                System.out.println(matriz[j][i]+ " "); 
            }
            System.out.println();
        }
        System.out.println();
}
}

*****************************************************************************
//LECCIÓN 11 - EJERCICIO 1
//PUTRINO AGUSTIN

package arreglo_1;
import java.util.Scanner;

/**
Leer 5 números, guardarlos en un array y mostrarlos en el mismo orden introducido
 */
public class arreglo_1 {
    

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        float [] array = new float [5];
        
        for (int i = 0; i < 5; i++) {
            System.out.println("Ingrese el valor del "+(i+1)+"° Número: ");
            array[i] = sc.nextFloat();
        }
        
        System.out.println("\nMostrando números ingresados: ");
        for (float i:array) {
            System.out.println(i+" ");
        }
        
    }
    
    ///////////////////////////////////////////////////////////ASISTENCIA COSTILLA CELINA //////////////////////////////////////////////////
    
    package arreglos;

import java.util.Scanner;

/**
 *
 * @author CELINA
 */
public class Arreglos {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
         //Ejercicio 1 : Leer 5 números , guardarlos en un arregloy mostrarlos en el mismo orden  introducidos
         
//        
//         Scanner sc= new Scanner(System.in);
//         float [] arregloNum = new float[5];
//         
//         System.out.println("Vamos a guardar los números en un arreglo");
//         
//         for (int i = 0; i <5; i++) {
//             System.out.println("Digite el "+ (i+1)+ " número:");
//             arregloNum[i]= sc.nextFloat();
//        }
//         
//         //Mostramos los números del arreglo
//         System.out.println("El arreglo de números ingresados es:");
//         
//         for(float unNumero: arregloNum){
//             System.out.println(unNumero + "");
//         }
//         System.out.println("\n");
//    }
    
    
    //Ejercicio 2 : Leer 5 números , guardarlos en un arreglo y mostrarlos en  orden inverso al  introducido.
      
    Scanner sc= new Scanner(System.in);
         float [] arregloNum = new float[5];
         
         System.out.println("Vamos a guardar los números en un arreglo");
         
         for (int i = 0; i <5; i++) {
             System.out.println("Digite el "+ (i+1)+ " número:");
             arregloNum[i]= sc.nextFloat();
        }
    
    //Mostramos los números del arreglo en orden inverso
         System.out.println("El arreglo de números ingresados es:");
         
         for(int i =4; i>=0;i--){
             System.out.println(arregloNum[i]+ "");
         }
          System.out.println("\n");
    }
    
    
}
/////////////////////////////////////////////////////////////////////SABA JUAN AGUSTÍN/////////////////////////////////////////////////////////////////////
package test;

public class TestArreglos {
    public static void main(String[] args) {
        
        int edades[] = new int [3]; // lado derecho: instanciamos un objeto de tipo Object con dimensión = 3
                                    // lado izquierdo: declaramos la variable 
                                    // no puede modificarse su tamaño o dimensión. No es dinámica
        
        System.out.println("edades = " + edades); //nos muestra la dirección de memoria donde se guarda nuestro arreglo
        
        //Agregamos un elemento en la posicion cero (0) del arreglo denaminado edades
        edades[0] = 17;
        System.out.println("edades[0] = " + edades[0]);
        
        edades[1] = 10;
        System.out.println("edades[1] = " + edades[1]);
        
        edades[2] = 2000;
        System.out.println("edade[2] = " + edades[2]);
        
        /*System.out.println("edades[4]= " + edades[4]);
        //si queremos acceder a una posición que no esta definida (es decir una posición que esté fuera del rango o dimensión)
          por ejemplo: edades[4], cuando ejecutemos el código va a arrojar el siguiente mensaje:
            Exception in thread "main" java.lang.ArrayIndexOutOfBoundsException: Index 4 out of bounds for length 3
            at test.TestArreglos.main(TestArreglos.java:23)*/
        
        for (int i = 0; i < edades.length; i++){ // si coloco <= debo restarle 1 posicion a la longitud (lenght) de mi arreglo
            System.out.println("edades y sus elementos " + i + ": " + edades[i] );
        }
    }
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Miriam Torres
/*
Ejercicio 15: Leer 10 enteros ordenados crecientemente. Leer N y buscarlo en la 
tabla. Se debe mostrar la posición en que se encuentra. Si no está, indicarlo
con un mensaje.
 */
package arreglos_ejercicio_15;

import java.util.Scanner;

public class Arreglos_Ejercicio_15 {
    public static void main(String[] args) {
        Scanner entrada = new Scanner(System.in);
        int arreglo[] = new int[10];
        boolean creciente = true;
        int numero, numero2 = 0;
        
        System.out.println("Llenar el arreglo: ");
        do {
            for (int i = 0; i < 10; i++) {
                System.out.print(i+". Digite un número: ");
                arreglo[i] = entrada.nextInt();
            } 
            
            for (int i = 0; i < 9; i++) {
                if (arreglo[i] < arreglo[i + 1]) {
                    creciente = true;                    
                }
                if (arreglo[i] > arreglo[i + 1]) {
                    creciente = false;
                    break;                   
                }                
            }
            if (creciente == false) {
                System.out.println("\nEl arreglo está dsordenado, vuelva a digitar");                
            }            
        } while (creciente == false);
        
        System.out.print("\nDigite un número para buscar en el arreglo: ");
        numero = entrada.nextInt();
        
        int i = 0;
        while(i < 10 && arreglo[i] < numero){
            i++;           
        }
        
        if (i == 10) {
            System.out.println("\nNúmero no encontrado");           
        }
        else{
            if (arreglo[i] == numero) {
                System.out.println("\nNúmero encontrado en la posición: "+i);                
            }
            else{
                System.out.println("Número no encontrado");
            }
        }
        
        System.out.println();        
    }
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Walter David Torres
/*
Ejercicio 14: Leer dos series de 10 enteros, que estaran ordenados crecientemente.
Copiar (fusionar) las dos tablas en una tercera, de forma que sigan ordenados.
 */
package arreglos_ejercicio_14;

import java.util.Scanner;

public class Arreglos_Ejercicio_14 {
    public static void main(String[] args) {
        Scanner entrada = new Scanner(System.in);
        int a[] = new int[10];
        int b[] = new int[10];
        int c[] = new int[20];
        boolean creciente = true;
         
        System.out.println("Llenar el primer arreglo: ");
        do {  
            for (int i = 0; i < 10; i++) {
                System.out.print((i + 1)+". Digite un número: ");
                a[i] = entrada.nextInt();
            }
            //Comprobammos si el arreglo esta ordenado
            for (int i = 0; i < 9; i++) {
                if (a[1] < a[i + 1]){   //Creciente 1-2-3
                    creciente = true;                    
                }
                if (a[i] > a[i + 1]){   //Decreciente 3-2-1
                    creciente = false;
                    break;                    
                }                
            }
            if (creciente == false){
              System.out.println("\nEl arreglo está desordenado, vuelva a digitar: "); 
            }            
        } while (creciente == false);
        System.out.println("Llenar el segundo arreglo: ");
        do { 
            for (int i = 0; i < 10; i++) {
                System.out.print((i + 1)+". Digite un número: ");
                b[i] = entrada.nextInt();        
            }
            for (int i = 0; i < 9; i++) {
                if (b[i] < b[i + 1]) {
                    creciente = true;                    
                }
                if (b[i] > b[i + 1]) {
                    creciente = false;
                    break;                    
                }                
            }
            if (creciente == false) {
                System.out.println("\nEl arreglo está desordenado, vuelva a digitar: ");                
            }            
        } while (creciente == false);
        int i = 0;   //Iterador i para el arreglo a
        int j = 0;   //Iterador j para el arreglo b
        int k = 0;   //Iterador k para el arreglo c
        
        while(i < 10 && j < 10){
            if (a[i] < b[j]) {   //Si el elemento de a es menor que b
                c[k] = a[i];    //Copiamos el elemento de a
                i++;   //Avanzamos una posición en a                
            }
            else{
                c[k] = b[j];   //Copiamos el elemento de b
                j++;   //Avanzamos una posición más en b
            }
            k++;   //Avanzamos una posición más en c
        }
        
        //Cuando salimos del while es porque un arreglo (a o b), se ha copiado completamente
        if (i == 10) {   //Significa que ya copiamos todo el arreglo a, falta el b
            while(j < 10) {   //Mientras el iterador sea menor a 10
                c[k] = b[j];   //Copiamos el elemento de b en c
                j++;   //Avanzamos una posición en b
                k++;   //Avanzamos una posición en c                
            }
        }    
        else{  //Significa que ya copiamos todo el arreglo b, falta el a
            while(i < 10){
                c[k] = a[i];
                i++;
                k++;                    
            }
        }
        
        System.out.println("\nEl arreglo c completo es: ");
        for (k = 0; k < 20; k++) {
            System.out.print(c[k]+" - ");            
        }
        System.out.println();            
        }        
}
